@model FiboBilling.Src.ViewModel.BillingViewModel
@{ Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";

    int count = 1;
    decimal? balance = 0;
    decimal? totalDr = 0;
    decimal? totalCr = 0;
    decimal? pmBalance = 0;
    decimal? pmTotalDr = 0;
    decimal? pmTotalCr = 0;
    decimal? totalBalance = 0;
    decimal? pmTotalBalance = 0;
}
@using FiboInfraStructure;
@inject FiboBilling.InfraStructure.Repository.IBillingDetailRepository _bDRepo;
@inject FiboBlock.InfraStructure.Repository.IClientRepository _clientRepo;
@inject FiboOffice.InfraStructure.Repository.IYearRepository _yearRepo;
@inject FiboOffice.InfraStructure.Repository.IMonthRepository _monthRepo;
@inject FiboBlock.InfraStructure.Repository.IRoomRepository _roomRepo;
@inject FiboBlock.InfraStructure.Repository.IBlockRepository _blockRepo;

<script type="text/javascript">
    function CallPrint(strid) {
        var mywindow = document.getElementById('profile');
        var popupWin = window.open('', "Kaamana Format", 'width=350,height=150,location=no,left=200px');

        popupWin.document.open();
        popupWin.document.write('<html><title>' + "" + '</title><link rel="stylesheet" type="text/css"  href="../Content/bootstrap.min.css" /></head><body onload="window.print()">')
        popupWin.document.write('<html><title>' + "" + '</title><link rel="stylesheet" type="text/css" href="../Content/print.css" /></head><body onload="window.print()">')
        popupWin.document.write(mywindow.innerHTML);
        popupWin.document.write('</html>');

        popupWin.document.close();

    }

</script>

@using (Html.BeginForm("BillingReport", "BillingReport", FormMethod.Get, new { @class = "form-view-data" }))
{
    <div class="col-sm-12">
        <div class="card">
            <div class="card-body">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-3">
                            <label>From Date</label>
                            @Html.TextBoxFor(x => x.FromMiti, "{0:yyyy/MM/dd }", new { @class = "form-control nepali-datepicker", @placeholder = "yyyy/MM/dd", @autocomplete = "off" })
                        </div>
                        <div class="col-lg-3">
                            <label>To Date</label>
                            @Html.TextBoxFor(x => x.ToMiti, "{0:yyyy/MM/dd }", new { @class = "form-control nepali-datepicker", @placeholder = "yyyy/MM/dd", @autocomplete = "off" })
                        </div>
                        <div class="col-lg-3">
                            <label for="ClientName">Client Name<br /><span style="color:red" id="message"></span></label><br />
                            <select asp-for="ClientId" asp-items="Model.ClientList" class="select2 custom-select form-control ClientId">
                                <option value="0">--Select--</option>
                            </select>
                        </div>
                        <div class="btn btn-group">
                            <button type="submit" class="btn btn-success">Search</button>
                            <button type="button" class="btn btn-success"
                                    style="background-color:darkblue;color:white;font-weight:bold"
                                    onclick="CallPrint('strid')" data-ma-action="print">
                                <i class="mdi mdi-cloud-print"></i> Print
                            </button>
                            <button type="button" class="btn btn-secondary" style="float: right"
                                    onclick="window.location.href = '@Url.Action("ExportToExcel","BillingReport")'">
                                Export Excel
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@*<div class="row" style="text-align:right">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <button type="button" class="btn"
                    style="margin-bottom: 20px; background-color: darkblue; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; color: white; font-weight: bold; margin-right: 15px;"
                    onclick="CallPrint('strid')" data-ma-action="print">
                <i class="mdi mdi-cloud-print"></i> Print
            </button>
        </div>
    </div>*@
<div class="col-sm-12" id="profile">
    <div class="card">
        <div class="card-body">
            <h4>Billing Report   </h4>
            <hr />
            <div class="table-responsive">
                <div class="tableFixHead">
                    <table class="table table-bordered table-striped" BORDER="1" width="100%">
                        <thead style="background-color: #FFFFFFCC;">
                            <tr>
                                <th>
                                    Date
                                </th>
                                <th>
                                    Client Name
                                </th>
                                <th>
                                    Particular
                                </th>
                                <th>Vch No.</th>
                                <th>
                                    Block
                                </th>
                                <th>Room</th>
                                <th>
                                    Room Rent
                                </th>
                                <th>
                                    Maintanance
                                </th>
                                <th>
                                    Unit
                                </th>
                                <th>
                                    Unit Charge
                                </th>
                                <th>Rent Fine</th>
                                <th>Electricity Fine</th>
                                <th>Due Paid</th>
                                @*<th>
                                        Debit
                                    </th>*@
                                <th>
                                    Amount Recieved
                                </th>
                                @*<th>
                                        Balance
                                    </th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.BillingList)
                            {

                                DateTime? dt = item.CreatedDate;
                                var detail = await _bDRepo.GetAllBillingAsync();

                                decimal rent = 0;
                                decimal unit = 0;
                                decimal maintannce = 0;
                                decimal electricity = 0;
                                pmTotalDr += item.GrandTotal.ToDecimal() + item.Fine.ToDecimal() + item.ElectricityFineAmount.ToDecimal() - item.Discount.ToDecimal();
                                pmTotalCr += item.CashReceived.ToDecimal() + item.DuePaid.ToDecimal();

                                var client = await _clientRepo.GetAllClientAsync();
                                var Clients = client.Where(x => x.Id == item.ClientId).FirstOrDefault();
                                string YearMonth = string.Empty;
                                string Room = string.Empty;
                                string Block = string.Empty;


                                foreach (var _detail in detail.Where(x => x.BillingId == item.Id).ToList())
                                {
                                    rent += _detail.RentAmount.ToDecimal();
                                    electricity += _detail.ElectricityBillAmount.ToDecimal();
                                    unit += _detail.ElectricityUnit.ToDecimal();
                                }

                                <tr>
                                    <td>
                                        @dt.ToNepDate()
                                    </td>
                                    <td>
                                        @Clients.OwnerName
                                    </td>
                                    <td>
                                        @foreach (var _detail in detail.Where(x => x.BillingId == item.Id).GroupBy(x => x.MonthId).Select(x => x.First()).ToList())
                                        {
                                            var year = await _yearRepo.GetByIdAsync((long)_detail.YearId);
                                            var month = await _monthRepo.GetByIdAsync((long)_detail.MonthId);
                                            YearMonth = string.Format("{0}/{1}", year.YearName, month.MonthName);
                                            @YearMonth
                                            <br /><br />
                                        }
                                    </td>
                                    <td>
                                        @item.BillNo
                                    </td>
                                    <td>
                                        @foreach (var _detail in detail.Where(x => x.BillingId == item.Id).GroupBy(x => x.BlockId).Select(x => x.First()).ToList())
                                        {
                                            var block = await _blockRepo.GetByIdAsync((long)_detail.BlockId);
                                            Block = block.Name;
                                            @Block
                                            <br /><br />
                                        }
                                    </td>
                                    <td>
                                        @foreach (var _detail in detail.Where(x => x.BillingId == item.Id).GroupBy(x => x.RoomId).Select(x => x.First()).ToList())
                                        {
                                            var room = await _roomRepo.GetByIdAsync((long)_detail.RoomId);
                                            Room = room.Name;
                                            @Room
                                            <br /><br />
                                        }
                                    </td>

                                    <td>
                                        @rent
                                    </td>
                                    <td>
                                        @item.MaintenanceCharge
                                    </td>
                                    <td>
                                        @unit
                                    </td>
                                    <td>
                                        @electricity
                                    </td>
                                    <td>@item.Fine</td>
                                    <td>@item.ElectricityFineAmount</td>
                                    <td>@item.DuePaid</td>
                                    @*<td>
                                            @pmTotalDr
                                        </td>*@
                                    <td>
                                        @item.CashReceived
                                    </td>
                                    @*<td>
                                            @{
                                                pmTotalBalance = pmTotalDr - pmTotalCr;
                                            }
                                            @if (pmTotalBalance.ToString().Contains('-'))
                                            {
                                                <span>(@pmTotalBalance.ToString().Trim('-'))</span>
                                            }
                                            else
                                            {
                                                @pmTotalBalance
                                            }
                                        </td>*@
                                </tr>
                                count++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
@section Scripts
{
}