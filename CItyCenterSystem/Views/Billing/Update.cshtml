@model FiboBilling.Src.Dto.BillingDto
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using FiboInfraStructure;
<style>
    input.largerCheckbox {
        width: 30px;
        height: 30px;
    }
</style>
<form asp-action="Update" asp-controller="Billing" method="post" class="needs-validation" novalidate>
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.CreatedBy)
    @Html.HiddenFor(x => x.CreatedDate)
    @Html.HiddenFor(x => x.ClientId)
    @Html.HiddenFor(x => x.YearId)
    @Html.HiddenFor(x => x.BillNo)
    @Html.HiddenFor(x => x.CreatedDate)
    @Html.HiddenFor(x => x.DueAmount)
    @Html.HiddenFor(x => x.DuePaid)
    @Html.HiddenFor(x => x.IsRent)
    @Html.HiddenFor(m => m.IsRent)
    @Html.HiddenFor(m => m.IsElectricity)
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-lg-4">
                    <label for="ClientName">Client Name<br /><span style="color:red" id="message"></span></label><br /><br />
                    <select asp-for="ClientId" asp-items="Model.ClientList" class="select2 custom-select form-control ClientId" required></select>
                    <div class="invalid-feedback">
                        Please Enter A Client Name.
                    </div>
                </div>
                <div class="col-lg-4">
                    <label for="Year">Year<span style="color:red">*</span></label><br />
                    <select asp-for="YearId" asp-items="Model.YearList" class=" form-control" required></select>
                    <div class="invalid-feedback">
                        Please Enter A Year.
                    </div>
                </div>
                @*<div class="col-lg-4">
                        <label for="DueAmount">Due Amount<br /><span style="color:red" id="message"></span></label><br />
                        <input type="text" asp-for="DueAmount" class="form-control" id="DueAmount" required autocomplete="off" readonly />
                        <div class="invalid-feedback">
                            Please Enter A Due Amount.
                        </div>
                    </div>*@
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <label for="DueDate">Date<br /><span style="color:red" id="message"></span></label><br />
                    <input type="text" asp-for="DueDate" class="form-control nepali-datepicker" id="DueDate" required autocomplete="off" readonly />
                    <div class="invalid-feedback">
                        Please Enter A Due Date.
                    </div>
                </div>
                @*<div class="col-lg-4" style="font-size: 16px; margin-top: 40px;">
                        <span style="color:red"><b>Is Rent?</b></span> &nbsp;<input type="checkbox" asp-for="IsRent" class="checkbox-success" id="chkIsRent" />
                        <span style="color:red"><b>Is Electricity?</b></span> &nbsp;<input type="checkbox" asp-for="IsElectricity" class="checkbox-success" id="chkIsElectricity" />
                    </div>*@
            </div>
            <hr />

            <div class="col-lg-12">
                <div class="table-responsive">
                    <table class="table table-bordered" id="table">
                        <thead>
                            <tr style="background-color: #4CAF50; color: white; height: 2px; line-height: 2px; text-align: center">
                                <th style="width: 12%;">Month</th>
                                <th style="width: 12%;">Block</th>
                                <th style="width: 12%;">Room</th>
                                <th style="width: 15%;" class="rent">Rent</th>
                                <th style="width: 8%;" class="unit">Unit</th>
                                <th style="width: 10%;" class="unitAmount">Amount</th>
                                <th>Total</th>
                                <th>Remarks</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.billingDetailDtos.Count() > 0)
                            {
                                for (int k = 0; k < Model.billingDetailDtos.Count(); k++)
                                {
                                    @Html.HiddenFor(x => x.billingDetailDtos[k].BillingId)
                                    @Html.HiddenFor(x => x.billingDetailDtos[k].Id)
                                    @Html.HiddenFor(x => x.billingDetailDtos[k].YearId)
                                    <tr>
                                        @*<td>
                                                @Html.DropDownListFor(x => x.billingDetailDtos[k].YearId, Model.YearList, new { @class = "form-control YearId" })

                                            </td>*@
                                        <td>
                                            @Html.DropDownListFor(x => x.billingDetailDtos[k].MonthId, Model.MonthList, new { @class = "form-control MonthId" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.billingDetailDtos[k].BlockId, Model.BlockList, new { @class = "form-control BlockId" })
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.billingDetailDtos[k].RoomId, Model.RoomList, new { @class = "form-control RoomId" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.billingDetailDtos[k].RentAmount, new { @class = "form-control RentAmount" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.billingDetailDtos[k].ElectricityUnit, new { @class = "form-control ElectricityUnit" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.billingDetailDtos[k].ElectricityBillAmount, new { @class = "form-control Rate ElectricityBillAmount" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.billingDetailDtos[k].Total, new { @class = "form-control Total" })
                                        </td>
                                        @*<td>
                                                @Html.TextBoxFor(x => x.billingDetailDtos[k].Debit, new { @class = "form-control Rate Debit", @onkeyup= "DebitAmount(this,event)" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.billingDetailDtos[k].Credit, new { @class = "form-control Rate Credit", @onkeyup = "CreditAmount(this,event)" })
                                            </td>*@
                                        <td>
                                            @Html.TextBoxFor(x => x.billingDetailDtos[k].Remarks, new { @class = "form-control Rate Remarks" })
                                        </td>
                                    </tr>
                                }

                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="6" style="text-align:right">
                                    <label>Grand Total</label>
                                </td>
                                <td colspan="1">
                                    <input type="text" asp-for="GrandTotal" class="form-control GrandTotal" id="GrandTotal" autocomplete="off" readonly />
                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                            <tr class="Fine">
                                <td colspan="6" style="text-align:right">
                                    Rent Fine
                                </td>
                                <td>
                                    <input type="text" asp-for="Fine" class="form-control " id="Fine" required autocomplete="off" onkeyup="CalculateNetPayable()" />

                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                            <tr class="ElectricityFineAmount">
                                <td colspan="6" style="text-align:right">
                                    Electricity Fine
                                </td>
                                <td>
                                    <input type="text" asp-for="ElectricityFineAmount" class="form-control" id="ElectricityFineAmount" required autocomplete="off" onkeyup="CalculateNetPayable()" />

                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">
                                    Discount
                                </td>
                                <td>
                                    <input type="text" asp-for="Discount" class="form-control" id="Discount" required autocomplete="off" onkeyup="CalculateNetPayable()" />

                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">
                                    Maintenance Charge
                                </td>
                                <td>
                                    <input type="text" asp-for="MaintenanceCharge" class="form-control" id="MaintenanceCharge" autocomplete="off" onkeyup="CalculateNetPayable()" />

                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                            @*<tr>
                                    <td colspan="6" style="text-align:right">
                                        Due Paid
                                    </td>
                                    <td>
                                        <input type="text" asp-for="DuePaid" class="form-control" id="DuePaid" autocomplete="off" onkeyup="CalculateCashReceived()" />

                                    </td>
                                    <td colspan="3">
                                    </td>
                                </tr>*@
                            <tr>
                                <td colspan="6" style="text-align:right">
                                    Cash Received
                                </td>
                                <td>
                                    <input type="text" asp-for="CashReceived" class="form-control" id="CashReceived" required autocomplete="off" onkeyup="CalculateNetPayable()" />

                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6" style="text-align:right">
                                    Net Payable
                                </td>
                                <td colspan="1">
                                    <input type="text" asp-for="BillingAmount" class="form-control NetPayable" id="NetPayable" readonly />
                                </td>
                                <td colspan="3">
                                </td>
                            </tr>
                        </tfoot>

                    </table>
                </div>
            </div>
            <div class="card-footer">
                <div class="form-group">
                    <div class="col-md-12" style="text-align:right">
                        <button type="submit" class="btn btn-success" id="btnSubmit"><i class="ti-check"></i>Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>
@section Scripts
{
    <script type="text/javascript">
        var dueAmount = 0;
        $(function () {
            $("#chkIsRent").click(function () {
                if ($(this).is(":checked")) {
                    $('.ElectricityUnit').each(function () {
                        $(this).hide();
                    });
                    $('.ElectricityBillAmount').each(function () {
                        $(this).hide();
                    });
                    $('.ElectricityFineAmount').hide();
                    $(function () {
                        $(".RentAmount").change();
                    });
                }
                else {
                    $('.ElectricityUnit').each(function () {
                        $(this).show();
                    });
                    $('.ElectricityBillAmount').each(function () {
                        $(this).show();
                    });
                    $('.ElectricityFineAmount').show();
                    $(function () {
                        $(".ElectricityUnit").change();
                    });
                }
            });
            $("#chkIsElectricity").click(function () {
                if ($(this).is(":checked")) {
                    $('.RentAmount').each(function () {
                        $(this).hide();
                    });
                    $(function () {
                        $(".ElectricityUnit").change();
                    });
                    $(".Fine").hide();
                }
                else {
                    $('.RentAmount').each(function () {
                        $(this).show();
                    });
                    $(function () {
                        $(".RentAmount").change();
                    });
                    $(".Fine").show();
                }
            });
        });


        $(document).on('invalid-form.validate', 'form', function () {
            var button = $(this).find(':submit');
            setTimeout(function () {
                button.removeAttr('disabled');
            }, 1);
        });
        $(document).on('submit', 'form', function () {
            var button = $(this).find(':submit');
            setTimeout(function () {
                button.attr('disabled', 'disabled');
            }, 0);
        });
    </script>
    <script type="text/javascript">
        $(".ClientId").change(function () {
            var row = $(this).closest('tr');
            var clientId = $("#ClientId").val();
            $.ajax({
            data: { Id: clientId },
            dataType: "Json",
            type: "GET",
            url: '@Url.Action("LoadRoomBlock", "Billing")',
                success: function (rooms) {
                    row.find('.BlockId').empty();
                    let i = 0;
                    for (var room in rooms) {
                        var html = '<option value="' + rooms[i].id + '">' + rooms[i].name + '</option>';
                        row.find('.BlockId').append(html);
                        i++;
                    }
                    $(".BlockId").change();
                }
            })
        })

        $('#table tbody').on('change', '.BlockId', function () {
            var row = $(this).closest('tr');
            var clientId = $("#ClientId").val();
            var blockId = row.find('.BlockId').val();
            $.ajax({
            data: { Id: clientId, blockId: blockId },
            dataType: "Json",
            type: "GET",
            url: '@Url.Action("LoadRoom", "Billing")',
                success: function (rooms) {
                    row.find('.RoomId').empty();
                    let i = 0;
                    for (var room in rooms) {
                        var html = '<option value="' + rooms[i].id + '">' + rooms[i].name + '</option>';
                        row.find('.RoomId').append(html);
                        i++;
                    }
                    $(".RoomId").change();
                }
            })
        })
        $('#table tbody').on('change', '.RoomId', function () {
            var row = $(this).closest('tr');
            var Id = row.find('.RoomId').val();
            $.ajax({
                 data: { id: Id },
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("LoadRoomRent", "Billing")',
                    error: function () {

                    },
                 success: function (datathis) {
                     var rent = datathis;
                     row.find('.RentAmount').val(rent);
                     //$('.RentAmount').each(function () {
                     //    $(this).val(rent);
                     //});
                     $(".RentAmount").change();
                     $(".MonthId").change();
                    }
                })
        });

        //function CalculateCashReceived() {
        //    var duePaid = $("#DuePaid").val();
        //    if (duePaid > 0) {
        //        var remainingAmount = parseFloat(dueAmount) - parseFloat(duePaid);
        //        $("#DueAmount").val(remainingAmount.toFixed(2));
        //    }
        //    else {
        //        $("#DueAmount").val(dueAmount);
        //    }
        //    CalculateNetPayable();
        //}


        @*function loadRent() {
            var Id = $("#RoomId").val();
             $.ajax({
                 data: { id: Id },
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("LoadRoomRent", "Billing")',
                    error: function () {

                    },
                 success: function (datathis) {
                     var rent = datathis;

                     $('.RentAmount').each(function () {
                         $(this).val(rent);
                     });
                    }
                })
        }*@

        $(".room").change(function () {
            var Id = $(this).val();
             $.ajax({
                 data: { id: Id },
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("LoadRoomRent", "Billing")',
                    error: function () {

                    },
                 success: function (datathis) {
                     var rent = datathis;

                     $('.RentAmount').each(function () {
                         $(this).val(rent);
                     });
                    }
             })

        });
        $(document).ready(function () {
            //$(function () {
            //    $(".room").change();
            //});

        });

        $(document).ready(function () {
            var Id = $("#ClientId").val();
             $.ajax({
                 data: { id: Id },
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("LoadDueAmount", "Billing")',
                    error: function () {

                    },
                 success: function (datathis) {
                     var due = datathis;
                     var y = trimChar(due, "-");

                     if (due.includes('-')) {

                         $("#lblDr").text(y);
                         $("#DueAmount").val(y);
                         dueAmount = $("#DueAmount").val();
                     }
                     else {
                         $("#lblCr").text(due);
                         $("#DueAmount").val(0);
                         $("#lblDr").text(0);
                     }

                    }
             })
            loadRoomBlock();
        });
        var escapeRegExp = function (strToEscape) {
            return strToEscape.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
        };

        var trimChar = function (origString, charToTrim) {
            charToTrim = escapeRegExp(charToTrim);
            var regEx = new RegExp("^[" + charToTrim + "]+|[" + charToTrim + "]+$", "g");
            return origString.replace(regEx, "");
        };

        $('#table tbody').on('change', '.RentAmount', function () {
            var row = $(this).closest('tr');
            var rent = row.find('.RentAmount').val();
            var electricity = row.find('.ElectricityBillAmount').val();
            if ($("#chkIsRent").is(":checked")) {
                var total = parseFloat(rent);
                row.find('.Total').val(total);
            }
            else if ($("#chkIsElectricity").is(":checked"))
            {
                var total = parseFloat(electricity);
                row.find('.Total').val(total);
            }
            else {
                var total = parseFloat(rent) + parseFloat(electricity);
                row.find('.Total').val(total);
            }
            calculateTotalAmount();
        })

        $('#table tbody').on('change', '.ElectricityUnit', function () {
            var row = $(this).closest('tr');
            var unit = row.find('.ElectricityUnit').val();
            var rent = row.find('.RentAmount').val();
            var electricitytotal = parseFloat(unit) * @ViewBag.Rate;
            row.find('.ElectricityBillAmount').val(electricitytotal);
            if ($("#chkIsRent").is(":checked")) {
                var total = parseFloat(rent);
                row.find('.Total').val(total);
            }
            else if ($("#chkIsElectricity").is(":checked")) {
                var total = parseFloat(row.find('.ElectricityBillAmount').val());
                row.find('.Total').val(total);
            }
            else {
                var total = parseFloat(rent) + parseFloat(row.find('.ElectricityBillAmount').val());
                row.find('.Total').val(total);
            }


            calculateTotalAmount();
        })

        $('#table tbody').on('change', '.MonthId', function () {
            var row = $(this).closest('tr');
            var monthId = row.find('.MonthId').val();
            var yearId = $('#YearId').val();
            var roomId = row.find('.RoomId').val();
            $.ajax({
                data: { monthId: monthId, yearId: yearId, roomId: roomId   },
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("LoadRoomUnit", "Billing")',
                    error: function () {

                    },
                    success: function (datathis) {
                        var unit = datathis;
                        if (unit > 0) {
                            row.find('.ElectricityUnit').val(unit);
                        }
                        else {
                            row.find('.ElectricityUnit').val(0);
                        }
                        $(function () {
                            $(".ElectricityUnit").change();
                        });
                    }
                })
        })
        function calculateTotalAmount() {
            var totalAmount = 0;
            $('.Total').each(function () {
                var amount = $(this).val();
                var amt = parseFloat(amount);
                totalAmount += amt;
            });
            $("#GrandTotal").val(totalAmount);
            CalculateNetPayable();
            //$("#NetPayable").val(totalAmount);
            //setFineValue();
            //setElectricityFineValue();

        }

        function DebitAmount(element, event) {
            var totalAmount = 0;
            var debit = $(element).val();
            var row = $(element).closest('tr');

            var total = row.find('.Total').val();
            if (debit > 0 && total > 0) {
               row.find('.Credit').val(total-debit);
            }

            $('.Debit').each(function () {
                var amount = $(this).val();
                var amt = parseFloat(amount);
                totalAmount += amt;
            });
            $("#DebitTotal").val(totalAmount);
            var totalAmountCr = 0;
            $('.Credit').each(function () {
                var amount = $(this).val();
                var amt = parseFloat(amount);
                totalAmountCr += amt;
            });
            $("#CreditTotal").val(totalAmountCr);

        }
        function CreditAmount(element, event) {
            var totalAmount = 0;
            var credit = $(element).val();
            var row = $(element).closest('tr');

            var total = row.find('.Total').val();
            if (credit > 0 && total > 0) {
                row.find('.Debit').val(total - credit);
            }
            $('.Credit').each(function () {
                var amount = $(this).val();
                var amt = parseFloat(amount);
                totalAmount += amt;
            });
            $("#CreditTotal").val(totalAmount);
            var totalAmountDr = 0;
            $('.Debit').each(function () {
                var amount = $(this).val();
                var amt = parseFloat(amount);
                totalAmountDr += amt;
            });
            $("#DebitTotal").val(totalAmountDr);
        }
        @*function setFineValue() {
            var row = $('#table tbody').children('tr:first');
            var yearId = $('#YearId').val();
            var monthId = row.find('.MonthId').val();
             $.ajax({
             method: 'get',
             url: '@Url.Action("LoadFineOnly")?YearId=' + yearId + "&MonthId=" + monthId,
             contentType: "application/json; charset=utf-8",
             dataType: "json",
             error: function () {

             },
                 success: function (datathis) {
                 var _finePercent = datathis;
                 var totalAmount = 0;
                 $('.RentAmount').each(function () {
                     var amount = $(this).val();
                     var amt = parseFloat(amount);
                     totalAmount += amt;
                 });
                 if (totalAmount > 0) {
                     var _fine = _finePercent / 100 * totalAmount;
                     if (_fine > 0) {
                         $("#Fine").val(_fine.toFixed(2));
                     }
                     else {
                         $("#Fine").val(0);
                     }
                 }
             }
             }).done(function () {
                 CalculateNetPayable();
             });
        }


        function setElectricityFineValue() {
            var row = $('#table tbody').children('tr:first');
            var yearId = $('#YearId').val();
            var monthId = row.find('.MonthId').val();
             $.ajax({
             method: 'get',
             url: '@Url.Action("LoadElectricityFineOnly")?YearId=' + yearId + "&MonthId=" + monthId,
             contentType: "application/json; charset=utf-8",
             dataType: "json",
             error: function () {

             },
             success: function (datathis) {
                 var _finePercent = datathis;
                 var totalAmount = 0;
                 $('.ElectricityBillAmount').each(function () {
                     var amount = $(this).val();
                     var amt = parseFloat(amount);
                     totalAmount += amt;
                 });
                 if (totalAmount >= 0) {
                     if (totalAmount > 0) {
                         var _fine = _finePercent / 100 * totalAmount;
                         if (_fine > 0) {
                             $("#ElectricityFineAmount").val(_fine.toFixed(2));
                         }
                     }
                     else {
                         $("#ElectricityFineAmount").val(0);
                     }
                 }
             }
             }).done(function () {
                 CalculateNetPayable();
             });
        }*@



        function CalculateNetPayable() {
            var total = $("#GrandTotal").val();
            var fine = $("#Fine").val();
            var efine = $("#ElectricityFineAmount").val();
            var discount = $("#Discount").val();
            var cashReceived = $("#CashReceived").val();
            var maintenanceCharge = $("#MaintenanceCharge").val();
            var duePaid = $("#DuePaid").val();

            if ($("#chkIsRent").is(":checked")) {
                if (fine >= 0 && discount >= 0 && cashReceived >= 0) {
                    var netPayable = parseFloat(total) - parseFloat(discount) + parseFloat(fine) - parseFloat(cashReceived) + parseFloat(maintenanceCharge);

                        //netPayable = netPayable + parseFloat(dueAmount) - parseFloat(duePaid);

                    $("#NetPayable").val(netPayable.toFixed(2));
                }
            }
            else if ($("#chkIsElectricity").is(":checked")) {
                if (efine >= 0 && discount >= 0 && cashReceived >= 0) {
                    var netPayable = parseFloat(total) - parseFloat(discount) + parseFloat(efine) - parseFloat(cashReceived) + parseFloat(maintenanceCharge);

                        //netPayable = netPayable + parseFloat(dueAmount) - parseFloat(duePaid);

                    $("#NetPayable").val(netPayable.toFixed(2));
                }
            }
            else {
                if (fine >= 0 && discount >= 0 && cashReceived >= 0 && efine >= 0) {
                    var netPayable = parseFloat(total) - parseFloat(discount) + parseFloat(fine) + parseFloat(efine) - parseFloat(cashReceived) + parseFloat(maintenanceCharge);

                        //netPayable = netPayable + parseFloat(dueAmount) - parseFloat(duePaid);

                    $("#NetPayable").val(netPayable.toFixed(2));
                }
            }
        }
        $(document).load(function () {
            loadRoomBlock();
        });
        function loadRoomBlock() {
            var clientId= $("#ClientId").val();
            $.ajax({
            data: { Id: clientId },
            dataType: "Json",
            type: "GET",
            url: '@Url.Action("LoadRoomBlock", "Billing")',
                success: function (client) {
                $("#RoomId").val(client.roomId);
                $("#BlockId").val(client.blockId);
            }
            })
        }

    </script>
}





