@model FiboBilling.Src.ViewModel.BillingViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
    int SN = 1;
    decimal totalAmount = 0;
    string YearMonth = string.Empty;
    decimal? amt = 0;
}
@inject FiboBlock.InfraStructure.Repository.IClientRepository _clientRepo;
@inject FiboBlock.InfraStructure.Repository.IBlockRepository _blockRepo;
@inject FiboBlock.InfraStructure.Repository.IRoomRepository _roomRepo;
@inject FiboOffice.InfraStructure.Repository.IYearRepository _yearRepo;
@inject FiboOffice.InfraStructure.Repository.IMonthRepository _monthRepo;

@using FiboInfraStructure;

<script type="text/javascript">
    function CallPrint(strid) {
        var mywindow = document.getElementById('profile');
        var popupWin = window.open('', "Kaamana Format", 'width=350,height=150,location=no,left=200px');

        popupWin.document.open();
        popupWin.document.write('<html><title>' + "" + '</title><link rel="stylesheet" type="text/css"  href="../Content/bootstrap.min.css" /></head><body onload="window.print()">')
        popupWin.document.write('<html><title>' + "" + '</title><link rel="stylesheet" type="text/css" href="../Content/print.css" /></head><body onload="window.print()">')
        popupWin.document.write(mywindow.innerHTML);
        popupWin.document.write('</html>');

        popupWin.document.close();

    }

</script>
<div class="row" style="text-align:right">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <button type="button" class="btn"
                style="margin-bottom:20px;background-color:darkblue;padding-top: 3px;
    padding-bottom: 5px;padding-left:5px;color:white;font-weight:bold"
                onclick="CallPrint('strid')" data-ma-action="print">
            <i class="mdi mdi-cloud-print"></i> Print
        </button>
    </div>
</div>
<div class="col-sm-12">
    <div class="card" id="profile">
        <div class="card-body">
            <div class="row">
                <div class="col-lg-12" style="text-align: center;width: 100%;">
                    <p>
                        <b style="font-size:24px">Parichaya Awas Bikash Pvt. Ltd.</b>
                    </p>
                </div>
                <div class="col-lg-12" style="text-align: center;width: 100%;">
                    <p>
                        Birtamode-5, Ph:-023-536567<br />megacomplexbtm@gmail.com<br />
                        <b> Bill</b>
                    </p>
                </div>
            </div>
            <table style="width: 100%;">
                <tr>
                    <td>
                        <b>Client Name :</b>
                        @if (Model.BillingList.Count > 0)
                        {
                            var client = await _clientRepo.GetByIdAsync((long)Model.BillingList.FirstOrDefault().ClientId);
                            @client.OwnerName
                        }
                    </td>
                    <td style="text-align:right">
                        <b>Bill Date :</b>
                        @if (Model.BillingList.Count > 0)
                        {
                            DateTime? dt = Model.BillingList.FirstOrDefault().CreatedDate;
                            @dt.ToNepDate()
                        }
                    </td>
                </tr>
                <br />
                <tr>
                    <td>
                        <b>Block No :</b>
                        @if (Model.BillingDetailList.Count > 0)
                        {
                            string blockName = string.Empty;
                            foreach (var item in Model.BillingDetailList.Select(o => o.BlockId).Distinct().ToList())
                            {
                                var block = await _blockRepo.GetByIdAsync((long)item);
                                blockName += @block.Name + ",";
                            }
                            @blockName
                        }
                    </td>
                    <td style="text-align:right">
                        <b>Billing By :</b>
                        @if (Model.BillingList.Count > 0)
                        {
                            @User.Identity.Name
                        }
                    </td>
                </tr>
                <br />
                <tr>
                    <td>
                        <b>Room No :</b>
                        @if (Model.BillingDetailList.Count > 0)
                        {
                            string roomName = string.Empty;
                            foreach (var item in Model.BillingDetailList.Select(o => o.RoomId).Distinct().ToList())
                            {
                                var room = await _roomRepo.GetByIdAsync((long)item);
                                roomName += @room.Name + ",";
                            }
                            @roomName
                        }
                    </td>
                    <td style="text-align:right">
                        <b>Vouchar No :</b>
                        @if (Model.BillingList.Count > 0)
                        {
                            @Model.BillingList.FirstOrDefault().BillNo
                        }
                    </td>
                </tr>
            </table>
            <br />
            <div class="table-responsive">
                <div class="tableFixHead">
                    <table class="table table-bordered table-striped" BORDER="1" width="100%">
                        <thead>
                            <tr style="text-align:center">
                                <th>
                                    S.N
                                </th>
                                <th>
                                    Year/Month
                                </th>
                                <th>
                                    Room Rent
                                </th>
                                <th>
                                    Unit
                                </th>
                                <th>
                                    Charge
                                </th>
                                <th>
                                    Amount
                                </th>
                            </tr>

                        </thead>
                        <tbody>

                            @foreach (var item in Model.BillingDetailList)
                            {
                                var year = await _yearRepo.GetByIdAsync((long)item.YearId);
                                var month = await _monthRepo.GetByIdAsync((long)item.MonthId);
                                YearMonth = string.Format("{0}/{1}", year.YearName, month.MonthName);


                                <tr>

                                    <td>
                                        @SN
                                    </td>
                                    <td>
                                        @YearMonth
                                    </td>
                                    <td style="text-align:right">

                                        @item.RentAmount<br />

                                    </td>
                                    <td style="text-align:right">
                                        @item.ElectricityUnit<br />

                                    </td>
                                    <td style="text-align:right">
                                        @item.ElectricityBillAmount<br />

                                    </td>
                                    <td style="text-align:right">

                                        @item.Total<br />

                                    </td>
                                </tr>
                                SN++;
                            }

                            @if (Model.BillingList.FirstOrDefault().IsRent)
                            {
                                <tr>
                                    <td colspan="5" style="text-align:right">Rent Fine</td>
                                    <td style="text-align:right">
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().Fine
                                        }
                                    </td>
                                </tr>
                            }
                            @if (Model.BillingList.FirstOrDefault().IsElectricity)
                            {
                                <tr>
                                    <td colspan="5" style="text-align:right">Electricity Fine</td>
                                    <td style="text-align:right">
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().ElectricityFineAmount
                                        }
                                    </td>
                                </tr>
                            }
                            @if (!Model.BillingList.FirstOrDefault().IsRent && !Model.BillingList.FirstOrDefault().IsElectricity)
                            {
                                <tr>
                                    <td colspan="5" style="text-align:right">Rent Fine</td>
                                    <td style="text-align:right">
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().Fine
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="5" style="text-align:right">Electricity Fine</td>
                                    <td style="text-align:right">
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().ElectricityFineAmount
                                        }
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td colspan="5" style="text-align:right">Discount</td>
                                <td style="text-align:right">
                                    @if (Model.BillingList.Count > 0)
                                    {
                                        @Model.BillingList.FirstOrDefault().Discount
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td colspan="5" style="text-align:right">Maintenance Charge</td>
                                <td style="text-align:right">
                                    @if (Model.BillingList.Count > 0)
                                    {
                                        @Model.BillingList.FirstOrDefault().MaintenanceCharge
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td colspan="5" style="text-align:right">Total</td>
                                <td style="text-align:right">
                                    @foreach (var item in Model.BillingDetailList)
                                    {
                                        totalAmount += item.Total.ToDecimal();
                                    }
                                    @if (Model.BillingList.FirstOrDefault().IsRent)
                                    {
                                        amt = totalAmount + Model.BillingList.FirstOrDefault().Fine.ToDecimal() - Model.BillingList.FirstOrDefault().Discount.ToDecimal() + Model.BillingList.FirstOrDefault().MaintenanceCharge.ToDecimal();
                                    }
                                    @if (Model.BillingList.FirstOrDefault().IsElectricity)
                                    {
                                        amt = totalAmount + Model.BillingList.FirstOrDefault().ElectricityFineAmount.ToDecimal() - Model.BillingList.FirstOrDefault().Discount.ToDecimal() + Model.BillingList.FirstOrDefault().MaintenanceCharge.ToDecimal();
                                    }
                                    @if (!Model.BillingList.FirstOrDefault().IsRent && !Model.BillingList.FirstOrDefault().IsElectricity)
                                    {
                                        amt = totalAmount + Model.BillingList.FirstOrDefault().Fine.ToDecimal() + Model.BillingList.FirstOrDefault().ElectricityFineAmount.ToDecimal() - Model.BillingList.FirstOrDefault().Discount.ToDecimal() + Model.BillingList.FirstOrDefault().MaintenanceCharge.ToDecimal();
                                    }
                                    @amt
                                </td>
                            </tr>
                            @if (Model.BillingList.FirstOrDefault().IsDue)
                            {
                                <tr>
                                    <td colspan="5" style="text-align:right">
                                        Due Paid:
                                    </td>
                                    <td style="text-align:right">
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().DuePaid
                                        }
                                    </td>
                                </tr>
                            }
                                <tr>
                                    <td colspan="5" style="text-align:right">
                                        Net Recieved:

                                    </td>
                                    <td style="text-align:right">
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().CashReceived
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="5" style="text-align: right">
                                        Due Amount:

                                    </td>
                                    <td style="text-align:right">
                                        @*<label class="lblDueAmount"></label>*@
                                        @if (Model.BillingList.Count > 0)
                                        {
                                            @Model.BillingList.FirstOrDefault().DueAmount
                                        }
                                    </td>
                                </tr>
                            </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
@section Scripts
{
    <script type="text/javascript">
        $(window).on('load', function () {
            var Id = @Model.BillingList.FirstOrDefault().ClientId;

             $.ajax({
                 data: { id: Id },
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("LoadDueAmount", "Billing")',
                    error: function () {

                    },
                 success: function (datathis) {
                     var due = datathis;
                     var y = trimChar(due, "-");
                     if (due.includes('-')) {
                         $(".lblDueAmount").text(y);
                     }
                     else {
                         $(".lblDueAmount").text(0);
                     }
                    }
             })
        });
        var escapeRegExp = function (strToEscape) {
            return strToEscape.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
        };

        var trimChar = function (origString, charToTrim) {
            charToTrim = escapeRegExp(charToTrim);
            var regEx = new RegExp("^[" + charToTrim + "]+|[" + charToTrim + "]+$", "g");
            return origString.replace(regEx, "");
        };
    </script>
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
@if (ViewBag.Message != null)
{
    <script type="text/javascript">
    'use strict';
    $(window).on('load', function () {
        function notify(message,type) {
            $.growl({
                message: message
            }, {
                type: type,
                allow_dismiss: false,
                label: 'Cancel',
                className: 'btn-xs btn-inverse',
                placement: {from: 'top', align: 'right'},
                delay: 2500,
                animate: { enter: 'animated rotateIn', exit: 'animated rotateIn'},
                offset: {x: 30,y: 30}
            });
        };
        notify('@ViewBag.Message','success');
    });

    </script>
}


